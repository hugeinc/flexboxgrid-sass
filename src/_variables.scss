@mixin _assert-ascending($map, $map-name) {
  $prev-key: null;
  $prev-num: null;
  @each $key, $num in $map {
    @if $prev-num == null {
      // Do nothing
    } @else if not comparable($prev-num, $num) {
      @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    } @else if $prev-num >= $num {
      @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    }
    $prev-key: $key;
    $prev-num: $num;
  }
}

@mixin _assert-starts-at-zero($map) {
  $values: map-values($map);
  $first-value: nth($values, 1);
  @if $first-value != 0 {
    @warn "First breakpoint in `$grid-breakpoints` must start at 0, but starts at #{$first-value}.";
  }
}

@mixin _assert-starts-at-one($map) {
  $values: map-values($map);
  $first-value: nth($values, 1);
  @if $first-value != 1 {
    @warn "First column in `$grid-columns` must start at 1, but starts at #{$first-value}.";
  }
}

// grid prefix name
$grid-p: "l";

// Create or remove breakpoints for your project
$grid-breakpoints: (
  xs: 0, // locked at 0
  sm: 700px,
  md: 940px,
  lg: 1260px
) !default;
@include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
@include _assert-starts-at-zero($grid-breakpoints);

// Define the maximum width of `.container` for different screen sizes.
$grid-containers: (
  // xs: 0, - intentionally excluded
  sm: 720px,
  md: 960px,
  lg: 1280px
) !default;
@include _assert-ascending($grid-containers, "$grid-containers");

// Set the number of columns you want to use on your layout.
$grid-columns: (
  xs: 1, // locked at 1
  sm: 8,
  md: 12,
  lg: 16
) !default;
@include _assert-ascending($grid-columns, "$grid-columns");
@include _assert-starts-at-one($grid-columns);

// Set the the width of the gutters.
$grid-gutter-width-base: 20px !default;
$grid-gutter-widths: (
  xs: $grid-gutter-width-base, // on left/right row edges
  sm: $grid-gutter-width-base, // between columns
  md: $grid-gutter-width-base, // between columns
  lg: $grid-gutter-width-base  // between columns
) !default;
